{
	"name": "Module9_copy_activity_parametrized",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select * \nfrom [etl].[tControlMetadata]",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_DB_etl_tControlMetadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Copy files meta-data",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false,
										"wildcardFolderPath": "metadata-drive",
										"wildcardFileName": {
											"value": "@item().SourcePath",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"preCopyScript": {
										"value": "@{concat('Truncate table ',item().DestinationSchema, '.', item().DestinationTable)}",
										"type": "Expression"
									},
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"tableOption": "autoCreate",
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"value": "@item().MappingColumns",
									"type": "Expression"
								}
							},
							"inputs": [
								{
									"referenceName": "ds_ADLS_raw_metadatadrive",
									"type": "DatasetReference",
									"parameters": {
										"SourcePath": {
											"value": "@item().SourcePath",
											"type": "Expression"
										},
										"SourceColumnDelimiter": {
											"value": "@item().SourceColumnDelimiter",
											"type": "Expression"
										},
										"SourceEncoding": {
											"value": "@item().SourceEncoding",
											"type": "Expression"
										},
										"SourceEscapeCharacter": {
											"value": "@item().SourceEscapeCharacter",
											"type": "Expression"
										},
										"SourceQuoteCharacter": {
											"value": "@item().SourceQuoteCharacter",
											"type": "Expression"
										},
										"SourceRowDelimiter": {
											"value": "@item().SourceRowDelimiter",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_DB_movies_stg",
									"type": "DatasetReference",
									"parameters": {
										"DestinationSchema": {
											"value": "@item().DestinationSchema",
											"type": "Expression"
										},
										"DestinationTable": {
											"value": "@item().DestinationTable",
											"type": "Expression"
										},
										"MappingColumns": {
											"value": "@item().MappingColumns",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "SP AuditLog",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy files meta-data",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[etl].[insert_audit]",
								"storedProcedureParameters": {
									"copy_duration": {
										"value": {
											"value": "@activity('Copy files meta-data').output.copyDuration",
											"type": "Expression"
										},
										"type": "Double"
									},
									"diu_value": {
										"value": {
											"value": "@activity('Copy files meta-data').output.executionDetails[0].usedDataIntegrationUnits",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"duration": {
										"value": {
											"value": "@activity('Copy files meta-data').output.billingReference.billableDuration[0].duration",
											"type": "Expression"
										},
										"type": "Double"
									},
									"end_time": {
										"value": {
											"value": "@activity('Copy files meta-data').output.executionDetails[0].start",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"meter_type": {
										"value": {
											"value": "@activity('Copy files meta-data').output.billingReference.billableDuration[0].meterType",
											"type": "Expression"
										},
										"type": "String"
									},
									"num_copied_rows": {
										"value": {
											"value": "@activity('Copy files meta-data').output.rowsCopied",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"num_processed_files": {
										"value": {
											"value": "@activity('Copy files meta-data').output.filesRead",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"num_read_rows": {
										"value": {
											"value": "@activity('Copy files meta-data').output.rowsRead",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"parallel_copies_value": {
										"value": {
											"value": "@activity('Copy files meta-data').output.usedParallelCopies",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"pipeline_name": {
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										},
										"type": "String"
									},
									"queue_duration": {
										"value": {
											"value": "@activity('Copy files meta-data').output.executionDetails[0].profile.queue.duration",
											"type": "Expression"
										},
										"type": "Double"
									},
									"run_id": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"start_time": {
										"value": {
											"value": "@activity('Copy files meta-data').output.executionDetails[0].start",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"status": {
										"value": {
											"value": "@activity('Copy files meta-data').output.executionDetails[0].status",
											"type": "Expression"
										},
										"type": "String"
									},
									"transfer_duration": {
										"value": {
											"value": "@activity('Copy files meta-data').output.executionDetails[0].profile.transfer.duration",
											"type": "Expression"
										},
										"type": "Double"
									},
									"unit": {
										"value": {
											"value": "@activity('Copy files meta-data').output.billingReference.billableDuration[0].unit",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "azure_mentoring_ns2_DB",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "SP ErrorsHandling",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy files meta-data",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[etl].[insert_errorlog]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": {
											"value": "@activity('Copy files meta-data').output.billingReference.activityType",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_code": {
										"value": {
											"value": "@activity('Copy files meta-data').output.errors[0].Code",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_datetime": {
										"value": {
											"value": "@activity('Copy files meta-data').output.executionDetails[0].start",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"error_message": {
										"value": {
											"value": "@activity('Copy files meta-data').output.errors[0].Message",
											"type": "Expression"
										},
										"type": "String"
									},
									"failure_type": {
										"value": {
											"value": "@activity('Copy files meta-data').output.errors[0].EventType",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_name": {
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										},
										"type": "String"
									},
									"run_id": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "azure_mentoring_ns2_DB",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "WebFailed",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "WebGET",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": true
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@activity('WebGET').output.value",
									"type": "Expression"
								},
								"method": "POST",
								"body": {
									"message": "@{activity('Set variable1').output.value} run ID @{pipeline().RunId}",
									"dataFactoryName": "@{pipeline().DataFactory}",
									"pipelineName": "@{pipeline().Pipeline}.",
									"errorMsg": "Error: @{activity('Copy files meta-data').output.errors[0].Message}",
									"receiver": "@{pipeline().parameters.receiver}"
								}
							}
						},
						{
							"name": "WebSuccess",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "WebGETs",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@activity('WebGETs').output.value",
									"type": "Expression"
								},
								"method": "POST",
								"body": {
									"message": "@{activity('Set variable2').output.value} run ID @{pipeline().RunId}",
									"dataFactoryName": "@{pipeline().DataFactory}",
									"pipelineName": "@{pipeline().Pipeline}",
									"receiver": "@{pipeline().parameters.receiver}"
								}
							}
						},
						{
							"name": "Set variable1",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Copy files meta-data",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "status",
								"value": "Status of pipeline Failed"
							}
						},
						{
							"name": "WebGET",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Set variable1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": true,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://mentoring-key-vault-ns2.vault.azure.net/secrets/LogicAppsHTTP/a11ddadb848b49fbab63c095358f2503?api-version=7.0",
								"method": "GET",
								"authentication": {
									"type": "MSI",
									"resource": "https://vault.azure.net"
								}
							}
						},
						{
							"name": "Set variable2",
							"description": "Status of pipeline Success",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Copy files meta-data",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "status",
								"value": "Status of pipeline Success"
							}
						},
						{
							"name": "WebGETs",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Set variable2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": true,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://mentoring-key-vault-ns2.vault.azure.net/secrets/LogicAppsHTTP/a11ddadb848b49fbab63c095358f2503?api-version=7.0",
								"method": "GET",
								"authentication": {
									"type": "MSI",
									"resource": "https://vault.azure.net"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"receiver": {
				"type": "string",
				"defaultValue": "Nataliia_Susiak@epam.com"
			}
		},
		"variables": {
			"status": {
				"type": "String"
			},
			"Status2": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-05-25T15:46:43Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}